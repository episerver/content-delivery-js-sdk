name: Continuous integration

on:
  pull_request:
    branches:
      - develop
      - master
      - main

jobs:
  build:
    name: Build & test SDK
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-sql-localdb
      - uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Build & test Content Definitions
        working-directory: ./src/@episerver/content-definitions
        run: |
          npm ci
          npm test
      - name: Build & test Content Delivery
        working-directory: ./src/@episerver/content-delivery
        run: |
          npm ci
          npm test

  build_test_pack_proxy:
    name: Build, test & pack Node.js proxy
    runs-on: windows-latest
    env:
      buildConfiguration: release
      versionSuffix: ci-${{github.RUN_NUMBER }}
      DOTNET_NOLOGO: 1
    steps:
      - uses: actions/checkout@v2
      - name: Restore Node.js proxy
        working-directory: ./src/EPiServer.ContentDelivery.NodeProxy
        run: dotnet restore
      - name: Build Node.js proxy
        working-directory: ./src/EPiServer.ContentDelivery.NodeProxy
        run: dotnet build --no-restore --configuration $env:buildConfiguration --version-suffix $env:versionSuffix
      - name: Test Node.js proxy
        working-directory: ./src/EPiServer.ContentDelivery.NodeProxy
        run: dotnet test --no-build --configuration $env:buildConfiguration
      - name: Pack Node.js proxy
        working-directory: ./src/EPiServer.ContentDelivery.NodeProxy
        run: dotnet pack --no-build --configuration $env:buildConfiguration --version-suffix $env:versionSuffix
      - name: Archive packages
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: artifacts/**/*.nupkg
          retention-days: 2

  publish:
    name: Publish packages
    needs: build_test_pack_proxy
    runs-on: windows-latest
    env:
      nugetSource: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      DOTNET_NOLOGO: 1
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages
      - name: Publish to Github Packages
        run: dotnet nuget push "**/*.nupkg" --source $env:nugetSource --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }}
